version: "v2.21.0-desktop.1"

x-logging:
  &default-logging
  logging:
    driver: json-file
    options:
      max-size: 100m

services:
  question-server:
    container_name: question-server
    build:
      context: ./microservices/questions-service
      dockerfile: Dockerfile.question
    ports:
      - "3001:3001"
    environment:
      MONGO_URI: /run/secrets/QUESTION_MONGO_URI
      PORT: 3001
    secrets:
      - QUESTION_MONGO_URI

  user-server:
    container_name: user-server
    build:
      context: ./microservices/user-service
      dockerfile: Dockerfile.user
    ports:
      - "3219:3219"
    environment:
      PGHOST: /run/secrets/USER_HOST
      PGUSER: /run/secrets/USER_USERNAME
      PGDATABASE: neondb
      PGPASSWORD: /run/secrets/USER_PASSWORD
      PGPORT: 5432
    secrets:
      - USER_USERNAME
      - USER_PASSWORD
      - USER_HOST

  auth-server:
    container_name: auth-server
    build:
      context: ./microservices/auth
      dockerfile: Dockerfile.auth
    ports:
      - "8080:8080"
    environment:
      AUTH_MONGODB_URI: /run/secrets/AUTH_MONGODB_URI
      AUTH_SESSION_SECRET: /run/secrets/AUTH_SESSION_SECRET
      # the following line is only for development purposes
      # FRONT_END_URL: http://localhost:5173
      FRONT_END_URL: http://192.168.1.26:5173
      USER_SERVICE_URL: http://user-server:3219
      QUESTION_SERVICE_URL: http://question-server:3001
      HISTORY_SERVICE_URL: http://history-server:7999
      RABBITMQ_URL: amqp://rabbitmq:5672
      VITE_JUDGE0_URL: http://judge0-server:2358
    secrets:
      - AUTH_MONGODB_URI
      - AUTH_SESSION_SECRET

  history-server:
    container_name: history-server
    build:
      context: ./microservices/history-service
      dockerfile: Dockerfile.history
    ports:
      - "7999:7999"
    environment:
      PGHOST: /run/secrets/HISTORY_HOST
      PGDATABASE: postgres
      PGPORT: 5432
      PGUSER: /run/secrets/HISTORY_USERNAME
      PGPASSWORD: /run/secrets/HISTORY_PASSWORD
    secrets:
      - HISTORY_USERNAME
      - HISTORY_PASSWORD
      - HISTORY_HOST

  matching-server:
    container_name: matching-server
    build:
      context: ./microservices/matching-service
      dockerfile: Dockerfile.match
    environment:
      RABBITMQ_URL: amqp://rabbitmq:5672
    depends_on:
      - rabbitmq

  collab-server:
    container_name: collab-server
    build:
      context: ./microservices/collaboration-service
      dockerfile: Dockerfile.collab
    environment:
      FRONT_END_URL: http://192.168.1.26:8080
      PORT: 3111
    ports:
      - "3111:3111"

  rabbitmq:
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    image: rabbitmq

  server:
    container_name: judge0-server
    image: judge0/judge0:1.13.0
    volumes:
      - ./microservices/judge0-v1.13.0/judge0.conf:/judge0.conf:ro
    ports:
      - "2358:2358"
    privileged: true
    <<: *default-logging
    depends_on:
      - db
      - redis

  workers:
    image: judge0/judge0:1.13.0
    command: ["./scripts/workers"]
    volumes:
      - ./microservices/judge0-v1.13.0/judge0.conf:/judge0.conf:ro
    privileged: true
    <<: *default-logging
    depends_on:
      - db
      - redis

  db:
    image: postgres:13.0
    env_file: ./microservices/judge0-v1.13.0/judge0.conf
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    <<: *default-logging

  redis:
    image: redis:6.0
    command: [
      "bash", "-c",
      'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: ./microservices/judge0-v1.13.0/judge0.conf
    volumes:
      - redis-data:/data
    <<: *default-logging

volumes:
  postgres-data:
  redis-data:

secrets:
  AUTH_MONGODB_URI:
    file: ./secrets/auth_service_mongo_uri.txt
  AUTH_SESSION_SECRET:
    file: ./secrets/auth_service_session_secret.txt
  QUESTION_MONGO_URI:
    file: ./secrets/question_service_mongo_uri.txt
  USER_USERNAME:
    file: ./secrets/user_service_username.txt
  USER_PASSWORD:
    file: ./secrets/user_service_password.txt
  USER_HOST:
    file: ./secrets/user_service_host.txt
  HISTORY_USERNAME:
    file: ./secrets/history_service_username.txt
  HISTORY_PASSWORD:
    file: ./secrets/history_service_password.txt
  HISTORY_HOST:
    file: ./secrets/history_service_host.txt
